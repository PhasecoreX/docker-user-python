---
kind: pipeline
name: prepare
trigger:
  branch:
  - master
  event:
  - push
clone:
  disable: true

steps:
- name: register-qemu
  image: multiarch/qemu-user-static:register
  command: [ "--reset" ]
  privileged: true

---
kind: pipeline
name: user-python-2.7-alpine
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v6 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-alpine-arm64v8
      - 2.7-alpine-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:2.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-alpine-arm32v7
      - 2.7-alpine-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:2.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v6
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-alpine-arm32v6
      - 2.7-alpine-arm32v6
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v6/python:2.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-alpine-amd64
      - 2.7-alpine-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:2.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-2-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 2-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-2.7-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 2.7-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - prepare

---
kind: pipeline
name: user-python-2.7-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-slim-arm64v8
      - 2.7-slim-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:2.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-slim-arm32v7
      - 2.7-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:2.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-slim-arm32v5
      - 2.7-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:2.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-slim-amd64
      - 2.7-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:2.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-2-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 2-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-2.7-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 2.7-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-2.7-alpine

---
kind: pipeline
name: user-python-2.7
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-arm64v8
      - 2.7-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:2-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-arm32v7
      - 2.7-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:2-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-arm32v5
      - 2.7-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:2-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 2-amd64
      - 2.7-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:2-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-2
  image: plugins/manifest
  environment:
    DRONE_TAG: 2
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-2.7
  image: plugins/manifest
  environment:
    DRONE_TAG: 2.7
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-2.7-slim

---
kind: pipeline
name: user-python-3.5-alpine
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v6 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-alpine-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.5-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-alpine-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.5-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v6
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-alpine-arm32v6
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v6/python:3.5-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-alpine-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.5-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.5-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.5-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-2.7

---
kind: pipeline
name: user-python-3.5-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-slim-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.5-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.5-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:3.5-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.5-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.5-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.5-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.5-alpine

---
kind: pipeline
name: user-python-3.5
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.5-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.5-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:3.5-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.5-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.5-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.5
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.5
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.5-slim

---
kind: pipeline
name: user-python-3.6-alpine
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v6 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-alpine-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.6-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-alpine-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.6-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v6
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-alpine-arm32v6
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v6/python:3.6-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-alpine-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.6-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.6-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.6-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.5

---
kind: pipeline
name: user-python-3.6-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-slim-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.6-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.6-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:3.6-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.6-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.6-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.6-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.6-alpine

---
kind: pipeline
name: user-python-3.6
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.6-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.6-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:3.6-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3.6-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.6-buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3.6
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.6
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.6-slim

---
kind: pipeline
name: user-python-3.7-alpine
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v6 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-alpine-arm64v8
      - 3.7-alpine-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-alpine-arm32v7
      - 3.7-alpine-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v6
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-alpine-arm32v6
      - 3.7-alpine-arm32v6
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v6/python:3.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-alpine-amd64
      - 3.7-alpine-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.alpine
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.7-alpine
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 3-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-3.7-alpine
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.7-alpine
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.6

---
kind: pipeline
name: user-python-3.7-slim
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-slim-arm64v8
      - 3.7-slim-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:3.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-slim-arm32v7
      - 3.7-slim-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:3.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-slim-arm32v5
      - 3.7-slim-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:3.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-slim-amd64
      - 3.7-slim-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:3.7-slim
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 3-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-3.7-slim
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.7-slim
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.7-alpine

---
kind: pipeline
name: user-python-3.7
trigger:
  branch:
  - master
  event:
  - push

steps:
- name: prepare
  image: docker:git
  commands:
    - mkdir -p /cache/${DRONE_REPO}/docker
    - echo "Enabled build caching"
    - git submodule update --init --recursive
    - echo "Pulled latest template files:"
    - ls -1 docker-user-image
    - ./generate_manifest.sh user-python arm64v8 arm32v7 arm32v5 amd64
    - echo "Generated docker manifest template:"
    - cat .manifest.tmpl
  volumes:
    - name: cache
      path: /cache

- name: docker-build-arm64v8
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-arm64v8
      - 3.7-arm64v8
      - latest-arm64v8
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=aarch64
      - ARCH_IMG=arm64v8/python:buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v7
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-arm32v7
      - 3.7-arm32v7
      - latest-arm32v7
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v7/python:buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-arm32v5
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-arm32v5
      - 3.7-arm32v5
      - latest-arm32v5
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian.qemu
    build_args:
      - QEMU_ARCH=arm
      - ARCH_IMG=arm32v5/python:buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-build-amd64
  image: plugins/docker
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    create_repository: true
    use_cache: true
    repo: phasecorex/user-python
    tags:
      - 3-amd64
      - 3.7-amd64
      - latest-amd64
    context: docker-user-image
    dockerfile: docker-user-image/Dockerfile.debian
    build_args:
      - QEMU_ARCH=x86_64
      - ARCH_IMG=amd64/python:buster
  volumes:
    - name: docker
      path: /var/lib/docker

- name: docker-push-manifest-3
  image: plugins/manifest
  environment:
    DRONE_TAG: 3
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-3.7
  image: plugins/manifest
  environment:
    DRONE_TAG: 3.7
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

- name: docker-push-manifest-latest
  image: plugins/manifest
  environment:
    DRONE_TAG: latest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    spec: .manifest.tmpl

volumes:
- name: cache
  host:
    path: /var/cache
- name: docker
  host:
    path: /var/cache/${DRONE_REPO}/docker

depends_on:
  - user-python-3.7-slim

---
kind: pipeline
name: notify
trigger:
  branch:
  - master
  event:
  - push
  status:
  - success
  - failure
clone:
  disable: true

steps:
- name: send-notification
  image: appleboy/drone-discord
  allow_failure: true
  settings:
    webhook_id:
      from_secret: discord_webhook_id
    webhook_token:
      from_secret: discord_webhook_token
    message: >
      {{#success build.status}}
        **{{repo.name}}**: Build #{{build.number}} on {{build.branch}} branch succeeded!
      {{else}}
        **{{repo.name}}**: Build #{{build.number}} on {{build.branch}} branch failed. Fix me please. {{build.link}}
      {{/success}}

depends_on:
  - user-python-2.7-alpine
  - user-python-2.7-slim
  - user-python-2.7
  - user-python-3.5-alpine
  - user-python-3.5-slim
  - user-python-3.5
  - user-python-3.6-alpine
  - user-python-3.6-slim
  - user-python-3.6
  - user-python-3.7-alpine
  - user-python-3.7-slim
  - user-python-3.7

---
kind: pipeline
name: downstream-build
trigger:
  branch:
  - master
  event:
  - push
clone:
  disable: true

steps:
- name: trigger
  image: plugins/downstream
  settings:
    server: https://ci.pcxserver.com
    token:
      from_secret: drone_token
    fork: true
    last_successful: true
    repositories:
      - PhasecoreX/docker-red-discordbot

depends_on:
  - user-python-2.7-alpine
  - user-python-2.7-slim
  - user-python-2.7
  - user-python-3.5-alpine
  - user-python-3.5-slim
  - user-python-3.5
  - user-python-3.6-alpine
  - user-python-3.6-slim
  - user-python-3.6
  - user-python-3.7-alpine
  - user-python-3.7-slim
  - user-python-3.7

